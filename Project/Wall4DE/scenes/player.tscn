[gd_scene load_steps=20 format=3 uid="uid://x0mlbtg4835v"]

[ext_resource type="Script" path="res://scripts/player.gd" id="1_67011"]
[ext_resource type="Texture2D" uid="uid://cs0q1r1e0hshv" path="res://resources/circle.png" id="3_k3afm"]

[sub_resource type="SphereShape3D" id="SphereShape3D_b2btc"]
radius = 0.4

[sub_resource type="Shader" id="Shader_uwq5y"]
code = "// Available at: https://godotshaders.com/shader/distortion-bubble/

shader_type spatial;

render_mode unshaded;

// fragment uniforms
uniform float distortionView : hint_range(0.0, 0.3, 0.005) = 0.03;
uniform float speedView : hint_range(0.0, 1.0, 0.005) = 0.5;
uniform sampler2D noiseViewX;
uniform sampler2D noiseViewY;
uniform sampler2D screenTexture : hint_screen_texture;
uniform vec3 tintColor : source_color;
uniform float fesnelAmount : hint_range(0.0, 5.0, 0.1);

// vertex uniforms
uniform float distortionVertex : hint_range(0.0, 0.3, 0.005) = 0.03;
uniform float speedVertex : hint_range(0.0, 1.0, 0.005) = 0.1;
uniform sampler2D noiseVertex;


float fresnel(float amount, vec3 normal, vec3 view)
{
	return pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);
}

void fragment()
{
	float noiseValueX  = (texture(noiseViewX, UV + (TIME * speedView)).r * 2.0) - 1.0; // Range: -1.0 to 1.0
	float noiseValueY  = (texture(noiseViewY, UV + (TIME * speedView)).r * 2.0) - 1.0; // Range: -1.0 to 1.0
	vec2 noiseDistort = vec2(noiseValueX, noiseValueY) * distortionView;
	vec3 distortedScreenTexture = vec3(texture(screenTexture, SCREEN_UV + noiseDistort).rgb);
	vec3 fesnelTint = (tintColor * fresnel(fesnelAmount, NORMAL, VIEW));

	ALBEDO = distortedScreenTexture + fesnelTint;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_2cg3j"]
noise_type = 0
seed = 3
frequency = 0.005
fractal_type = 3
fractal_lacunarity = 0.561
fractal_gain = 0.703
fractal_ping_pong_strength = -3.797
domain_warp_enabled = true
domain_warp_amplitude = 70.0
domain_warp_frequency = 0.01
domain_warp_fractal_type = 2
domain_warp_fractal_octaves = 1
domain_warp_fractal_lacunarity = 5.56
domain_warp_fractal_gain = -5.917

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_8iuhb"]
width = 256
height = 256
seamless = true
noise = SubResource("FastNoiseLite_2cg3j")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_yqf1x"]
noise_type = 0
frequency = 0.001
offset = Vector3(0, 9.99, 0)
fractal_type = 3
fractal_octaves = 10
fractal_lacunarity = 2.719
fractal_gain = -0.311
fractal_weighted_strength = 1.0
fractal_ping_pong_strength = -4.836
domain_warp_enabled = true
domain_warp_amplitude = 70.0
domain_warp_frequency = 0.01
domain_warp_fractal_type = 2
domain_warp_fractal_octaves = 1
domain_warp_fractal_lacunarity = 5.56
domain_warp_fractal_gain = -5.917

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_jvdca"]
width = 64
height = 64
seamless = true
noise = SubResource("FastNoiseLite_yqf1x")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_c1yru"]
noise_type = 0
seed = 1
fractal_type = 3
fractal_octaves = 1
fractal_lacunarity = 81.139
fractal_gain = 1.319
fractal_weighted_strength = 1.0
fractal_ping_pong_strength = 0.881
domain_warp_enabled = true
domain_warp_amplitude = 30.979
domain_warp_frequency = -0.015
domain_warp_fractal_type = 2
domain_warp_fractal_octaves = 1
domain_warp_fractal_lacunarity = 5.585
domain_warp_fractal_gain = -2.329

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_pchcc"]
width = 128
height = 128
seamless = true
noise = SubResource("FastNoiseLite_c1yru")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mdgsi"]
render_priority = 0
shader = SubResource("Shader_uwq5y")
shader_parameter/distortionView = 0.01
shader_parameter/speedView = 0.1
shader_parameter/tintColor = Color(0.59, 0.842833, 1, 1)
shader_parameter/fesnelAmount = 1.0
shader_parameter/distortionVertex = 0.03
shader_parameter/speedVertex = 0.1
shader_parameter/noiseViewX = SubResource("NoiseTexture2D_jvdca")
shader_parameter/noiseViewY = SubResource("NoiseTexture2D_pchcc")
shader_parameter/noiseVertex = SubResource("NoiseTexture2D_8iuhb")

[sub_resource type="SphereMesh" id="SphereMesh_cd1w3"]
material = SubResource("ShaderMaterial_mdgsi")
radial_segments = 32
rings = 16

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_qr0k3"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_jeiu2"]
albedo_color = Color(0.227451, 0.305882, 1, 1)
albedo_texture = SubResource("CompressedTexture2D_qr0k3")

[sub_resource type="TorusMesh" id="TorusMesh_g7phu"]
material = SubResource("StandardMaterial3D_jeiu2")
inner_radius = 0.45
outer_radius = 0.4
rings = 16
ring_segments = 8

[sub_resource type="SphereMesh" id="SphereMesh_cqddc"]
material = SubResource("StandardMaterial3D_jeiu2")
radius = 0.1
height = 0.2
radial_segments = 16
rings = 8

[sub_resource type="TorusMesh" id="TorusMesh_ve727"]
material = SubResource("StandardMaterial3D_jeiu2")
inner_radius = 0.3
outer_radius = 0.35
rings = 16
ring_segments = 8

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_3otuj"]
transparency = 1
no_depth_test = true
shading_mode = 0
albedo_color = Color(0.655, 0.55, 1, 1)
albedo_texture = ExtResource("3_k3afm")
billboard_mode = 1

[sub_resource type="PlaneMesh" id="PlaneMesh_exjqm"]
material = SubResource("StandardMaterial3D_3otuj")
size = Vector2(1.3, 1.3)
orientation = 2

[node name="Player" type="RigidBody3D"]
collision_mask = 2068
gravity_scale = 0.0
linear_damp = 1.0
angular_damp = 5.0
script = ExtResource("1_67011")

[node name="Collision" type="CollisionShape3D" parent="."]
shape = SubResource("SphereShape3D_b2btc")

[node name="Area3D" type="Area3D" parent="."]
collision_layer = 2
collision_mask = 0

[node name="Collision" type="CollisionShape3D" parent="Area3D"]
shape = SubResource("SphereShape3D_b2btc")

[node name="Mesh" type="Node3D" parent="."]

[node name="Boundary" type="MeshInstance3D" parent="Mesh"]
mesh = SubResource("SphereMesh_cd1w3")

[node name="Ring" type="MeshInstance3D" parent="Mesh/Boundary"]
mesh = SubResource("TorusMesh_g7phu")

[node name="Ball" type="MeshInstance3D" parent="Mesh/Boundary/Ring"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.4, 0, 0)
mesh = SubResource("SphereMesh_cqddc")

[node name="Ball2" type="MeshInstance3D" parent="Mesh/Boundary/Ring"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.4, 0, 0)
mesh = SubResource("SphereMesh_cqddc")

[node name="Ring2" type="MeshInstance3D" parent="Mesh/Boundary"]
transform = Transform3D(-4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 0, 0, 1, 0, 0, 0)
mesh = SubResource("TorusMesh_ve727")

[node name="Ball" type="MeshInstance3D" parent="Mesh/Boundary/Ring2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0.3, 0, 0)
mesh = SubResource("SphereMesh_cqddc")

[node name="Ball2" type="MeshInstance3D" parent="Mesh/Boundary/Ring2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, -0.3, 0, 0)
mesh = SubResource("SphereMesh_cqddc")

[node name="Core" type="MeshInstance3D" parent="Mesh/Boundary"]
mesh = SubResource("SphereMesh_cqddc")

[node name="Focus" type="MeshInstance3D" parent="."]
mesh = SubResource("PlaneMesh_exjqm")

[node name="Raycast" type="Node3D" parent="."]
top_level = true

[node name="U" type="RayCast3D" parent="Raycast"]
target_position = Vector3(0, 1, 0)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[node name="D" type="RayCast3D" parent="Raycast"]
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[node name="R" type="RayCast3D" parent="Raycast"]
target_position = Vector3(1, 0, 0)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[node name="L" type="RayCast3D" parent="Raycast"]
target_position = Vector3(-1, 0, 0)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[node name="F" type="RayCast3D" parent="Raycast"]
target_position = Vector3(0, 0, 1)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[node name="B" type="RayCast3D" parent="Raycast"]
target_position = Vector3(0, 0, -1)
collision_mask = 8
collide_with_areas = true
collide_with_bodies = false

[connection signal="area_shape_entered" from="Area3D" to="." method="_on_area_3d_area_shape_entered"]
[connection signal="area_shape_exited" from="Area3D" to="." method="_on_area_3d_area_shape_exited"]
